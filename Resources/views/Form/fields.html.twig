{% extends 'form_div_layout.html.twig' %}

{# Labels #}

{% block form_label %}
{% set label_attr = label_attr|merge({'class': 'control-label'}) %}
{{ parent() }}
{% endblock form_label %}

{# Fields #}

{% block date_widget %}
    {% spaceless %}
        {% if widget == 'choice' or widget == 'single_text' or widget == 'text' %}
            {{ parent() }}
        {% else %}
            {% set attr = attr|merge({'class': (attr.class|default('') ~ ' bootstrapp-datetime')|trim}) %}
            <div class="input-prepend inline date" data-widget="{{ widget }}" data-type='date' style="position:relative;">
                <span class="add-on"><i class="icon-calendar"></i></span>
                {{ block('form_widget_simple') }}
                <input type="text" class="{{ widget }}" style="position:absolute; top:0; right: 0; visibility: hidden;"/>
            </div>
            {% if javascript %}
            <script type="text/javascript">
                {% if not app.request.isXmlHttpRequest %}
                window.addEventListener('load', function(){
                {% endif %}
                    $(function() {
                        $('#{{ id }}').datetime({lang: '{{ app.request.locale|slice(0,2)|lower }}'});
                    });
                {% if not app.request.isXmlHttpRequest %}
                });
                {% endif %}
            </script>
            {% endif %}
        {% endif %}
    {% endspaceless %}
{% endblock date_widget %}

{% block time_widget %}
    {% spaceless %}
        {% if widget == 'choice' or widget == 'single_text' or widget == 'text' %}
            {{ parent() }}
        {% else %}
            {% set attr = attr|merge({'class': (attr.class|default('') ~ ' input-small bootstrapp-datetime')|trim}) %}
            <div class="input-prepend inline time" data-widget="{{ widget }}" data-type='time' style="position:relative;">
                <span class="add-on"><i class="icon-time"></i></span>
                {{ block('form_widget_simple') }}
                <input type="text" class="{{ widget }} input-small" style="position:absolute; top:0; right: 0; visibility: hidden;"/>
            </div>
            {% if javascript %}
            <script type="text/javascript">
                {% if not app.request.isXmlHttpRequest %}
                window.addEventListener('load', function(){
                {% endif %}
                    $(function() {
                        $('#{{ id }}').datetime({lang: '{{ app.request.locale|slice(0,2)|lower }}'});
                    });
                {% if not app.request.isXmlHttpRequest %}
                });
                {% endif %}
            </script>
            {% endif %}
        {% endif %}
    {% endspaceless %}
{% endblock time_widget %}

{% block datetime_widget %}
    {% spaceless %}
        {% if widget == 'mobiscroll' %}
            {% set attr = attr|merge({'data-widget': widget, 'data-type':'datetime', 'style': 'position:relative;'}) %}
            <div {{ block('widget_container_attributes') }}>
                {{ form_errors(form.date) }}
                {{ form_errors(form.time) }}
                {{ form_widget(form.date) }}
                {{ form_widget(form.time) }}
                <input type="text" class="{{ widget }}" style="position:absolute; top:0; visibility: hidden;"/>
            </div>
        {% else %}
            {{ parent() }}
        {% endif %}
    {% endspaceless %}
{% endblock datetime_widget %}

{% block bootstrapp_bundle_location_widget %}
    <div class="row-fluid">
        <div class="span6">
            {{ form_row(form.streetNumber) }}
            {{ form_row(form.route) }}
            {{ form_row(form.postalCode) }}
            {{ form_row(form.locality) }}
            {{ form_row(form.shortCountry) }}
            {{ form_row(form.country) }}
            {{ form_row(form.administrativeAreaLevel1) }}
            {{ form_row(form.administrativeAreaLevel2) }}
            <hr/>
            {{ form_row(form.latitude) }}
            {{ form_row(form.longitude) }}
        </div>
        <div class="span6">
            <div class="input-append input-block-level">
                {{ form_widget(form.address, {'attr':{'class':'input-block-level'}}) }}
                <button id="{{ form.vars.id }}_locate" class="btn" type="button"><i class="icon-location"></i></button>
            </div>
            <div id="{{ form.vars.id }}_map" class="map google-maps"></div>
        </div>
    </div>
    <script type="text/javascript">
        {% if not app.request.isXmlHttpRequest %}
        window.addEventListener('load', function(){
        {% endif %}
            var latitude = {{ form.latitude.vars.data|default(0) }},
                longitude = {{ form.longitude.vars.data|default(0) }},
                mapOptions = {
                    scrollwheel: true,
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    marker: { visible: true }
                };
            if (0 == latitude && 0 == longitude) {
                latitude = 46.227638;
                longitude = 2.213749;
                mapOptions.marker.visible = false;
                mapOptions.zoom = 5;
            }
            mapOptions.center = [latitude, longitude];
            $('#{{ form.address.vars.id }}').locationTypeahead({
                map: '#{{ form.vars.id }}_map',
                draggableMarker: true,
                mapOptions: mapOptions,
                boundElements: {
                    '#{{ form.address.vars.id }}': function (data) {
                        return data.formatted_address;
                    },
                    '#{{ form.streetNumber.vars.id }}': 'street_number',
                    '#{{ form.route.vars.id }}': 'route',
                    '#{{ form.postalCode.vars.id }}': 'postal_code',
                    '#{{ form.locality.vars.id }}': 'locality',
                    '#{{ form.shortCountry.vars.id }}': function (data) {
                        var result = '';
                        $.each(data.address_components, function (index, value) {
                            $.each(value.types, function (index, type) {
                                if (type == 'country') {
                                    result = value.short_name;
                                }
                            });
                            if (result.length >0) {
                                return false;
                            }
                        });
                        return result;
                    },
                    '#{{ form.country.vars.id }}': 'country',
                    '#{{ form.administrativeAreaLevel1.vars.id }}': 'administrative_area_level_1',
                    '#{{ form.administrativeAreaLevel2.vars.id }}': 'administrative_area_level_2',
                    '#{{ form.latitude.vars.id }}': function (data) {
                        return data.geometry.location.lat();
                    },
                    '#{{ form.longitude.vars.id }}': function (data) {
                        return data.geometry.location.lng();
                    }
                }
            });
            $('#bootstrapp_socialbundle_persontype_home_locate').click(function(e){
                var typeahead = $('#{{ form.address.vars.id }}').data('locationTypeahead');
                if (typeahead) {
                    typeahead.geocode();
                }
            });
        {% if not app.request.isXmlHttpRequest %}
        });
        {% endif %}
    </script>
{% endblock bootstrapp_bundle_location_widget %}

{% block bootstrapp_bundle_ckeditor_widget %}
    <textarea {{ block('widget_attributes') }}>{{ value | raw }}</textarea>
    {% if enable %}
        <script type="text/javascript">
            {% if not app.request.isXmlHttpRequest %}
            window.addEventListener('load', function(){
            {% endif %}
                if (CKEDITOR.instances['{{ id }}']) {
                    delete CKEDITOR.instances['{{ id }}'];
                }

                {% for plugin_name, plugin in plugins %}
                    CKEDITOR.plugins.addExternal('{{ plugin_name }}', '{{ plugin.path }}', '{{ plugin.filename }}');
                {% endfor %}

                CKEDITOR.replace('{{ id }}', {{ config | raw }});
            {% if not app.request.isXmlHttpRequest %}
            });
            {% endif %}
        </script>
    {% endif %}
{% endblock bootstrapp_bundle_ckeditor_widget %}

{% block file_widget %}
    {% set uploadtype = uploadtype|default('file') %}
    {% if uploadtype == 'image' %}
        <div class="fileupload fileupload-new" data-provides="fileupload">
            <div class="fileupload-new thumbnail"><img src="{{ url|default(placehold(placeholdWidth, placeholdHeight, placeholdText|trans)) }}" /></div>
            <div class="fileupload-preview fileupload-exists thumbnail"></div>
            <div class="btn-group">
                <span class="btn btn-small btn-file" type="button"><i class="icon-picture"></i> Select{{ parent() }}</span>
                <span class="btn btn-small fileupload-exists" data-dismiss="fileupload" type="button"><i class="icon-remove"></i> Undo</span>
            </div>
        </div>
    {% elseif uploadtype|default('file') == 'video' %}
        <div class="fileupload fileupload-new" data-provides="fileupload">
            <div class="fileupload-new thumbnail">
                <video id="video" controls width="{{ placeholdWidth }}" height="{{ placeholdHeight }}" preload="auto" data-setup="{}">
                    <source type="video/{{ filetype }}" src="{{ url }}">
                </video>
            </div>
            <div class="fileupload-preview fileupload-exists thumbnail"></div>
            <div class="btn-group">
                <span class="btn btn-small btn-file" type="button"><i class="icon-film"></i> Select{{ parent() }}</span>
                <span class="btn btn-small fileupload-exists" data-dismiss="fileupload" type="button"><i class="icon-remove"></i> Undo</span>
            </div>
        </div>
    {% elseif uploadtype|default('file') == 'disabled-audio' %}
        <div class="fileupload fileupload-new" data-provides="fileupload">
            <div class="fileupload-new thumbnail">
                <audio>
                    <source type="audio/{{ filetype }}" src="{{ url }}"></source>
                </audio>
            </div>
            <div class="fileupload-preview fileupload-exists thumbnail"></div>
            <div class="btn-group">
                <span class="btn btn-small btn-file" type="button"><i class="icon-music"></i> Select{{ parent() }}</span>
                <span class="btn btn-small fileupload-exists" data-dismiss="fileupload" type="button"><i class="icon-remove"></i> Undo</span>
            </div>
        </div>
    {% else %}
        <div class="fileupload fileupload-new" data-provides="fileupload">
            <div class="input-append">
                <div class="uneditable-input span3"><i class="icon-file"></i>
                    <span class="fileupload-preview">
                        {% if url is not empty %}
                            <a href="{{ url }}" target="_blank">{{ filename|default(null) }}</a>
                        {% else %}
                            {{ filename|default(null) }}
                        {% endif %}
                    </span>
                </div>
                <span class="button btn btn-file">Select file
                    {{ block('form_widget') }}
                </span>
                <span class="button btn fileupload-exists" data-dismiss="fileupload" type="button">Remove</span>
            </div>
        </div>
    {% endif %}
    <script type="text/javascript">
        {% if not app.request.isXmlHttpRequest %}
        window.addEventListener('load', function(){
        {% endif %}
            $(function() {
                $('#{{ id }}').fileupload();
            });
        {% if not app.request.isXmlHttpRequest %}
        });
        {% endif %}
    </script>
{% endblock file_widget %}

{# Errors #}

{% block form_errors %}
{% spaceless %}
    {% if not form.vars.valid %}
        {% if not form.parent %}
            <div class="alert alert-error">
                {{ 'alert.form.errors'|trans|raw }}
                {% if form.vars.errors|length %}
                    {% for error in form.vars.errors %}
                        <p>{{
                            error.messagePluralization is null
                            ? error.messageTemplate|trans(error.messageParameters, 'validators')
                            : error.messageTemplate|transchoice(error.messagePluralization, error.messageParameters, 'validators')
                            }}</p>
                    {% endfor %}
                {% endif %}
            </div>
        {% elseif errors|length > 0 %}
            <span class="help-inline">
                {% for error in errors %}
                <p>{{
                    error.messagePluralization is null
                        ? error.messageTemplate|trans(error.messageParameters, 'validators')
                        : error.messageTemplate|transchoice(error.messagePluralization, error.messageParameters, 'validators')
                }}</p>
                {% endfor %}
            </span>
        {% endif %}
    {% endif %}
{% endspaceless %}
{% endblock form_errors %}

{# Rows #}

{% block form_row %}
{% spaceless %}
    <div class="control-group{% if errors %} error{% endif %}">
        {{ form_label(form) }}
        <div class="controls">
            {{ form_widget(form) }}
            {% if parent is defined %}
                {{ form_errors(parent) }}
            {% else %}
                {{ form_errors(form) }}
            {% endif %}
        </div>
    </div>
{% endspaceless %}
{% endblock form_row %}

{% block form_rows %}
{% spaceless %}
    {% import 'BootstrappBundle:Macro:alert.html.twig' as alert %}
    {% if errors %}
        {% for error in errors %}
            {{ alert.message('error',
                error.messagePluralization is null
                ? error.messageTemplate|trans(error.messageParameters, 'validators')
                : error.messageTemplate|transchoice(error.messagePluralization, error.messageParameters, 'validators')
            ) }}
        {% endfor %}
    {% endif %}
    {% for child in form %}
        {{ form_row(child) }}
    {% endfor %}
{% endspaceless %}
{% endblock form_rows %}