{% extends 'form_div_layout.html.twig' %}

{# Labels #}

{% block form_label %}
{% set label_attr = label_attr|merge({'class': 'control-label'}) %}
{{ parent() }}
{% endblock form_label %}

{# Fields #}

{% block bootstrapp_bundle_date_widget %}
    {% spaceless %}
        {% if widget == 'choice' or widget == 'single_text' or widget == 'text' %}
            {{ parent() }}
        {% else %}
            {% set attr = attr|merge({'class': (attr.class|default('') ~ ' bootstrapp-datetime')|trim}) %}
            <div class="input-prepend inline date" data-widget="{{ widget }}" data-type='date' style="position:relative;">
                <span class="add-on"><i class="icon-calendar"></i></span>
                {{ block('form_widget_simple') }}
                <input type="text" class="{{ widget }}" style="position:absolute; top:0; right: 0; visibility: hidden;"/>
            </div>
            {% if javascript %}
            <script type="text/javascript">
                {% if not app.request.isXmlHttpRequest %}
                window.addEventListener('load', function(){
                {% endif %}
                    $(function() {
                        $('#{{ id }}').datetime({lang: '{{ app.request.locale|slice(0,2)|lower }}'});
                    });
                {% if not app.request.isXmlHttpRequest %}
                });
                {% endif %}
            </script>
            {% endif %}
        {% endif %}
    {% endspaceless %}
{% endblock bootstrapp_bundle_date_widget %}

{% block bootstrapp_bundle_time_widget %}
    {% spaceless %}
        {% if widget == 'choice' or widget == 'single_text' or widget == 'text' %}
            {{ parent() }}
        {% else %}
            {% set attr = attr|merge({'class': (attr.class|default('') ~ ' input-small bootstrapp-datetime')|trim}) %}
            <div class="input-prepend inline time" data-widget="{{ widget }}" data-type='time' style="position:relative;">
                <span class="add-on"><i class="icon-time"></i></span>
                {{ block('form_widget_simple') }}
                <input type="text" class="{{ widget }} input-small" style="position:absolute; top:0; right: 0; visibility: hidden;"/>
            </div>
            {% if javascript %}
            <script type="text/javascript">
                {% if not app.request.isXmlHttpRequest %}
                window.addEventListener('load', function(){
                {% endif %}
                    $(function() {
                        $('#{{ id }}').datetime({lang: '{{ app.request.locale|slice(0,2)|lower }}'});
                    });
                {% if not app.request.isXmlHttpRequest %}
                });
                {% endif %}
            </script>
            {% endif %}
        {% endif %}
    {% endspaceless %}
{% endblock bootstrapp_bundle_time_widget %}

{% block bootstrapp_bundle_datetime_widget %}
    {% spaceless %}
        {% if widget == 'mobiscroll' %}
            {% set attr = attr|merge({'data-widget': widget, 'data-type':'datetime', 'style': 'position:relative;'}) %}
            <div {{ block('widget_container_attributes') }}>
                {{ form_errors(form.date) }}
                {{ form_errors(form.time) }}
                {{ form_widget(form.date) }}
                {{ form_widget(form.time) }}
                <input type="text" class="{{ widget }}" style="position:absolute; top:0; visibility: hidden;"/>
            </div>
        {% else %}
            {{ parent() }}
        {% endif %}
    {% endspaceless %}
{% endblock bootstrapp_bundle_datetime_widget %}

{% block bootstrapp_bundle_location_widget %}
    {% trans_default_domain "location" %}
    <div class="row-fluid" id ="{{ form.vars.id }}" style="position: relative;">
        <div class="span8">
            {% if form.address is defined %}
            <div class="row-fluid">
                <div class="span12">
                    <div class="control-group">
                        <label class="control-label" for="{{ form.address.vars.id }}">{{ 'Address'|trans }}</label>
                        <div class="controls">
                            <div class="input-append input-block-level">
                                {{ form_widget(form.address) }}
                                <div class="btn-group">
                                    <button id="{{ form.vars.id }}_clear" class="btn" type="button"><i class="icon-remove"></i></button>
                                    <button id="{{ form.vars.id }}_locate" class="btn" type="button"><i class="icon-location"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            {% endif %}
            <div class="controls">
                {% if form.streetNumber is defined or form.route is defined %}
                <div class="row-fluid">
                    {% if form.streetNumber is defined and form.route is defined %}
                    <div class="span4">{{ form_row(form.streetNumber) }}</div>
                    <div class="span8">{{ form_row(form.route) }}</div>
                    {% elseif form.streetNumber is defined %}
                    <div class="span12">{{ form_row(form.streetNumber) }}</div>
                    {% elseif form.route is defined %}
                    <div class="span12">{{ form_row(form.route) }}</div>
                    {% endif %}
                </div>
                {% endif %}
                <div class="row-fluid">
                    <div class="span4">{{ form_row(form.postalCode) }}</div>
                    <div class="span8">{{ form_row(form.locality) }}</div>
                </div>
                <div class="row-fluid">
                    <div class="span12">
                        {{ form_row(form.shortCountry) }}
                    </div>
                </div>
            </div>
            {{ form_row(form.country) }}
            {% if form.administrativeAreaLevel1 is defined %}
            {{ form_row(form.administrativeAreaLevel1) }}
            {% endif %}
            {% if form.administrativeAreaLevel2 is defined %}
            {{ form_row(form.administrativeAreaLevel2) }}
            {% endif %}
            {{ form_row(form.latitude) }}
            {{ form_row(form.longitude) }}
        </div>
        <div class="span4" style="position: absolute; top: 0; right: 0; bottom: 0;">
            <div id="{{ form.vars.id }}_map" class="map google-maps" style="height: 100%"></div>
        </div>
    </div>
    <script type="text/javascript">
        {% if not app.request.isXmlHttpRequest %}
        window.addEventListener('load', function(){
        {% endif %}
            var latitude = {{ form.latitude.vars.data|default(0) }},
                longitude = {{ form.longitude.vars.data|default(0) }},
                mapOptions = {
                    scrollwheel: true,
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    marker: { visible: true }
                };
            mapOptions.center = [latitude, longitude];
            $('#{{ form.vars.id }}').locationTypeahead({
                country: '{{ defaultCountry }}',
                map: '#{{ form.vars.id }}_map',
                draggableMarker: true,
                mapOptions: mapOptions,
                callback: function(data, status) {
                    if (status == google.maps.GeocoderStatus.OK && null != data) {
                        $('#{{ form.latitude.vars.id }}').val(data.geometry.location.lat());
                        $('#{{ form.longitude.vars.id }}').val(data.geometry.location.lng());
                    } else {
                        // handle error
                    }
                },
                geocoderOptions: {
                    region: '{{ app.request.locale|slice(3,2)|upper }}',
                    reverse: true
                }
            });
            {% if form.address is defined %}
            $('#{{ form.vars.id }}_locate').click(function(e){
                var typeahead = $('#{{ form.vars.id }}').data('locationTypeahead');
                if (typeahead) {
                    typeahead.geocode();
                }
            });
            $('#{{ form.vars.id }}_clear').click(function(e){
                $('#{{ form.vars.id }}').find('input, select').each(function(index, element) {
                    if ($(element).data('select2')) {
                        $(element).select2('val', '');
                    } else {
                        $(element).val('');
                    }
                });
            });
            {% endif %}
            {% if form.shortCountry is defined %}
            $('#{{ form.shortCountry.vars.id }}').bootstrappSelect2({
                placeholder: '{{ 'Select the country'|trans }}'
            });
            {% endif %}
        {% if not app.request.isXmlHttpRequest %}
        });
        {% endif %}
    </script>
{% endblock bootstrapp_bundle_location_widget %}

{% block bootstrapp_bundle_ckeditor_widget %}
    <textarea {{ block('widget_attributes') }}>{{ value|raw }}</textarea>
    {% if enable %}
        <script type="text/javascript">
            {% if not app.request.isXmlHttpRequest %}
            window.addEventListener('load', function(){
            {% endif %}
                if (CKEDITOR.instances['{{ id }}']) {
                    delete CKEDITOR.instances['{{ id }}'];
                }

                {% for plugin_name, plugin in plugins %}
                    CKEDITOR.plugins.addExternal('{{ plugin_name }}', '{{ plugin.path }}', '{{ plugin.filename }}');
                {% endfor %}

                CKEDITOR.replace('{{ id }}', {{ config|raw }});
            {% if not app.request.isXmlHttpRequest %}
            });
            {% endif %}
        </script>
    {% endif %}
{% endblock bootstrapp_bundle_ckeditor_widget %}

{% block bootstrapp_bundle_file_widget %}
    {% set uploadtype = uploadtype|default('file') %}
    {% set class = filename|default(null) is not empty and remove ? 'fileupload-exists' : 'fileupload-new' %}
    {% if uploadtype == 'image' %}
        {% set style = '' %}
        {% if placeholdWidth %}
            {% set style = style ~ ' width: ' ~ placeholdWidth|default('100%') ~ ';' %}
        {% endif %}
        {% if placeholdHeight %}
            {% set style = style ~ ' height: ' ~ placeholdHeight ~ ';' %}
            {% set ratio = '' %}
        {% else %}
            {% set ratio = ratio ? ' ratio' ~ ratio|replace({'/': '_'}) : ' square' %}
        {% endif %}
        <div class="fileupload {{ class }}" data-provides="fileupload" style="{{ style }}">
            <div class="fileupload-new thumbnail{{ ratio }}" style="{{ style }}">
                {% if placeholdText is not empty %}
                {{ placeholdText|trans|raw }}
                {% else %}
                    <i class="icon-picture"></i>
                {% endif %}
            </div>
            <div class="fileupload-preview fileupload-exists thumbnail{{ ratio }}" style="{{ style }}">
                {% if url is defined and url is not empty %}
                    <img src="{{ url }}">
                {% endif %}
            </div>
            <div class="btn-group">
                <span class="btn btn-small btn-file"><i class="icon-picture"></i>
                    {{ block('form_widget') }}
                </span>
                <span class="btn btn-small fileupload-exists" data-dismiss="fileupload"><i class="icon-remove"></i></span>
            </div>
        </div>
    {% elseif uploadtype|default('file') == 'video' %}
        <div class="fileupload {{ class }}" data-provides="fileupload">
            <div class="fileupload-new thumbnail">
                <video id="video" controls width="{{ placeholdWidth }}" height="{{ placeholdHeight }}" preload="auto" data-setup="{}">
                    <source type="video/{{ filetype }}" src="{{ url }}">
                </video>
            </div>
            <div class="fileupload-preview fileupload-exists thumbnail"></div>
            <div class="btn-group">
                <span class="btn btn-small btn-file"><i class="icon-film"></i> {{ 'form.button.file'|trans }}
                    {{ block('form_widget') }}
                </span>
                <span class="btn btn-small fileupload-exists" data-dismiss="fileupload"><i class="icon-remove"></i> {{ 'form.button.cancel'|trans }}</span>
            </div>
        </div>
    {% elseif uploadtype|default('file') == 'disabled-audio' %}
        <div class="fileupload {{ class }}" data-provides="fileupload">
            <div class="fileupload-new thumbnail">
                <audio>
                    <source type="audio/{{ filetype }}" src="{{ url }}">
                </audio>
            </div>
            <div class="fileupload-preview fileupload-exists thumbnail"></div>
            <div class="btn-group">
                <span class="btn btn-small btn-file"><i class="icon-music"></i> {{ 'form.button.file'|trans }}
                    {{ block('form_widget') }}
                </span>
                <span class="btn btn-small fileupload-exists" data-dismiss="fileupload"><i class="icon-remove"></i> {{ 'form.button.cancel'|trans }}</span>
            </div>
        </div>
    {% else %}
        <div class="fileupload {{ class }}" data-provides="fileupload">
            <div class="input-append">
                <div class="uneditable-input span3"><i class="icon-file"></i>
                    <span class="fileupload-preview">
                        {% if url is defined and url is not empty %}
                            <a href="{{ url }}" target="_blank">{{ filename|default(null) }}</a>
                        {% else %}
                            {{ filename|default(null) }}
                        {% endif %}
                    </span>
                </div>
                <span class="btn btn-file">{{ 'form.button.file'|trans }}
                    {{ block('form_widget') }}
                </span>
                <span class="btn fileupload-exists" data-dismiss="fileupload">
                    {% if filename|default(null) is not empty and remove %}
                    {{ 'form.button.remove'|trans }}
                    {% else %}
                    {{ 'form.button.cancel'|trans }}
                    {% endif %}
                </span>
            </div>
        </div>
    {% endif %}
    <script type="text/javascript">
        {% if not app.request.isXmlHttpRequest %}
        window.addEventListener('load', function(){
        {% endif %}
            $(function() {
                var fileupload = $('#{{ id }}').closest('.fileupload').fileupload().data('fileupload'),
                    filename = fileupload.$input.val(),
                    preview = fileupload.$preview.html();
                {% if filename|default(null) is not empty and remove %}
                $('#{{ id }}').change(function(){
                    switch(true) {
                        case filename.length > 0:
                        case fileupload.$input.val().length == 0 && fileupload.$preview.html().length ==0 && preview.length == 0:
                            fileupload.reset();
                            fileupload.$element.removeClass('fileupload-new')
                            fileupload.$element.addClass('fileupload-exists')
                            break;
                    }
                    filename = fileupload.$input.val();
                    preview = fileupload.$preview.html()
                    if (fileupload.$element.is('.fileupload-exists') && filename.length == 0) {
                        fileupload.$remove.html('<i class="icon-remove"></i>');
                    } else {
                        fileupload.$remove.html('<i class="icon-undo"></i>');
                    }
                    // show button action remove|cancel
                    fileupload.$remove.show();
                });
                {% endif %}
            });
        {% if not app.request.isXmlHttpRequest %}
        });
        {% endif %}
    </script>
{% endblock bootstrapp_bundle_file_widget %}

{# Errors #}

{% block form_errors %}
{% spaceless %}
    {% if not form.vars.valid %}
        {% if not form.parent %}
            <div class="alert alert-error">
                {{ 'alert.form.errors'|trans|raw }}
                {% if form.vars.errors|length %}
                    {% for error in form.vars.errors %}
                        <p>{{
                            error.messagePluralization is null
                            ? error.messageTemplate|trans(error.messageParameters, 'validators')|raw
                            : error.messageTemplate|transchoice(error.messagePluralization, error.messageParameters, 'validators')|raw
                            }}</p>
                    {% endfor %}
                {% endif %}
            </div>
        {% elseif errors|length > 0 %}
            <span class="help-inline">
                {% for error in errors %}
                <p>{{
                    error.messagePluralization is null
                        ? error.messageTemplate|trans(error.messageParameters, 'validators')|raw
                        : error.messageTemplate|transchoice(error.messagePluralization, error.messageParameters, 'validators')|raw
                }}</p>
                {% endfor %}
            </span>
        {% endif %}
    {% endif %}
{% endspaceless %}
{% endblock form_errors %}

{# Rows #}

{% block form_row %}
{% spaceless %}
    <div class="control-group{% if errors is iterable and errors|length %} error{% endif %}">
        {{ form_label(form) }}
        <div class="controls">
            {{ form_widget(form) }}
            {% if parent is defined %}
                {{ form_errors(parent) }}
            {% else %}
                {{ form_errors(form) }}
            {% endif %}
        </div>
    </div>
{% endspaceless %}
{% endblock form_row %}

{% block form_rows %}
{% spaceless %}
    {% import 'BootstrappBundle:Macro:alert.html.twig' as alert %}
    {% if errors is iterable and errors|length %}
        {% for error in errors %}
            {{ alert.message('error',
                error.messagePluralization is null
                ? error.messageTemplate|trans(error.messageParameters, 'validators')
                : error.messageTemplate|transchoice(error.messagePluralization, error.messageParameters, 'validators')
            ) }}
        {% endfor %}
    {% endif %}
    {% for child in form %}
        {{ form_row(child) }}
    {% endfor %}
{% endspaceless %}
{% endblock form_rows %}
